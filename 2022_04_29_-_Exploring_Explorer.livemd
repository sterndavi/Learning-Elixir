# Exploring explorer

## Section

```elixir
Mix.install([
  {:explorer, "~> 0.1.1"},
  {:kino, "~> 0.6.0"}
])
```

<!-- livebook:{"output":true} -->

```
Resolving Hex dependencies...
Dependency resolution completed:
New:
  castore 0.1.17
  explorer 0.1.1
  kino 0.6.0
  nx 0.1.0
  rustler_precompiled 0.4.1
  table 0.1.0
  table_rex 3.1.1
* Getting explorer (Hex package)
* Getting kino (Hex package)
* Getting table (Hex package)
* Getting nx (Hex package)
* Getting rustler_precompiled (Hex package)
* Getting table_rex (Hex package)
* Getting castore (Hex package)
==> nx
Compiling 23 files (.ex)
Generated nx app
==> table
Compiling 3 files (.ex)
Generated table app
==> kino
Compiling 27 files (.ex)
Generated kino app
==> castore
Compiling 1 file (.ex)
Generated castore app
==> rustler_precompiled
Compiling 3 files (.ex)
Generated rustler_precompiled app
==> table_rex
Compiling 7 files (.ex)
Generated table_rex app
==> explorer
Compiling 14 files (.ex)

19:42:40.252 [debug] Copying NIF from cache and extracting to /home/davi/.cache/mix/installs/elixir-1.13.0-erts-12.3.1/5b0c775eca7f8f6aeae304ea2672c237/_build/dev/lib/explorer/priv/native/libexplorer-v0.1.1-nif-2.16-x86_64-unknown-linux-gnu.so
Generated explorer app
```

<!-- livebook:{"output":true} -->

```
:ok
```

```elixir
alias Explorer.DataFrame
alias Explorer.Series
```

<!-- livebook:{"output":true} -->

```
Explorer.Series
```

```elixir
df = Explorer.Datasets.fossil_fuels()
Explorer.DataFrame.table(df)
```

<!-- livebook:{"output":true} -->

```
+----------------------------------------------------------------------------------------------------------------------------------+
|                                          Explorer DataFrame: [rows: 1094, columns: 10]                                           |
+-----------+-------------+-----------+------------+-------------+-----------+-----------+-------------+------------+--------------+
|   year    |   country   |   total   | solid_fuel | liquid_fuel | gas_fuel  |  cement   | gas_flaring | per_capita | bunker_fuels |
| <integer> |  <string>   | <integer> | <integer>  |  <integer>  | <integer> | <integer> |  <integer>  |  <float>   |  <integer>   |
+===========+=============+===========+============+=============+===========+===========+=============+============+==============+
| 2010      | AFGHANISTAN | 2308      | 627        | 1601        | 74        | 5         | 0           | 0.08       | 9            |
+-----------+-------------+-----------+------------+-------------+-----------+-----------+-------------+------------+--------------+
| 2010      | ALBANIA     | 1254      | 117        | 953         | 7         | 177       | 0           | 0.43       | 7            |
+-----------+-------------+-----------+------------+-------------+-----------+-----------+-------------+------------+--------------+
| 2010      | ALGERIA     | 32500     | 332        | 12381       | 14565     | 2598      | 2623        | 0.9        | 663          |
+-----------+-------------+-----------+------------+-------------+-----------+-----------+-------------+------------+--------------+
| 2010      | ANDORRA     | 141       | 0          | 141         | 0         | 0         | 0           | 1.68       | 0            |
+-----------+-------------+-----------+------------+-------------+-----------+-----------+-------------+------------+--------------+
| 2010      | ANGOLA      | 7924      | 0          | 3649        | 374       | 204       | 3697        | 0.37       | 321          |
+-----------+-------------+-----------+------------+-------------+-----------+-----------+-------------+------------+--------------+

```

<!-- livebook:{"output":true} -->

```
:ok
```

```elixir
input = Kino.Input.text("Filename")
```

```elixir
filename = Kino.Input.read(input)

DataFrame.write_csv(df, filename)
```

<!-- livebook:{"output":true} -->

```
{:ok, "E:\\01 Projetos Davi"}
```

```elixir
s1 = Series.from_list([1, 2, 3])
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[3]
  [1, 2, 3]
>
```

```elixir
Series.dtype(s1)
```

<!-- livebook:{"output":true} -->

```
:integer
```

```elixir
1..100
|> Enum.to_list()
|> Series.from_list()
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[100]
  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
   27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
   ...]
>
```

```elixir
s = Series.from_list([1.0, 2.0, nil, nil, 5])
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  float[5]
  [1.0, 2.0, nil, nil, 5.0]
>
```

```elixir
Series.fill_missing(s, :mean)
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  float[5]
  [1.0, 2.0, 2.6666666666666665, 2.6666666666666665, 5.0]
>
```

```elixir
Series.from_list([1, 2, 3, "a"])
```

```elixir
s = 1..10 |> Enum.to_list() |> Series.from_list()
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[10]
  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>
```

```elixir
s[[2]]
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[1]
  [3]
>
```

```elixir
s[[0, 4, 4]]
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[3]
  [1, 5, 5]
>
```

```elixir
Series.to_list(s)
```

<!-- livebook:{"output":true} -->

```
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
```

```elixir
s = 1..11 |> Enum.to_list() |> Series.from_list()
s1 = 11..1 |> Enum.to_list() |> Series.from_list()
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[11]
  [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
>
```

```elixir
s |> Series.equal(s1)
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  boolean[11]
  [false, false, false, false, false, true, false, false, false, false, false]
>
```

```elixir
s |> Series.greater(s1)
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  boolean[11]
  [false, false, false, false, false, false, true, true, true, true, true]
>
```

```elixir
s |> Series.add(s1)
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[11]
  [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
>
```

```elixir
s = Series.from_list([1, 2, 3])
s1 = Series.from_list(["a", "b", "c"])
Series.add(s, s1)
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[3]
  [2, 4, 6]
>
```

```elixir
s = Series.from_list([1, 2, 3, 4])
s |> Series.reverse()
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[4]
  [4, 3, 2, 1]
>
```

```elixir
s =
  100..200
  |> Enum.to_list()
  |> Enum.shuffle()
  |> Series.from_list()

s
|> Series.sort()
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[101]
  [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
   119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
   138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, ...]
>
```

```elixir
ids = Series.argsort(s)
```

<!-- livebook:{"output":true} -->

```
[99, 76, 57, 50, 47, 68, 3, 66, 74, 88, 100, 60, 2, 85, 81, 11, 38, 58, 55, 63, 86, 31, 95, 94, 98,
 80, 34, 71, 87, 91, 19, 82, 67, 18, 56, 14, 43, 29, 54, 35, 23, 84, 37, 78, 64, 96, 77, 9, 7, 4,
 ...]
```

```elixir
s |> Series.take([40, 45, 47])
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[3]
  [167, 192, 104]
>
```

```elixir
s |> Series.cum_sum()
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[101]
  [163, 323, 435, 541, 690, 885, 1037, 1185, 1370, 1517, 1668, 1783, 1955, 2108, 2243, 2423, 2621,
   2798, 2931, 3061, 3260, 3426, 3585, 3725, 3925, 4083, 4262, 4459, 4652, 4789, 4944, 5065, 5233,
   5404, 5530, 5669, 5859, 6001, 6117, 6281, 6448, 6634, 6830, 6966, 7149, 7341, 7525, 7629, 7807,
   7968, ...]
>
```

```elixir
1..5 |> Enum.to_list() |> Series.from_list() |> Series.rolling_sum(3)
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  integer[5]
  [1, 3, 6, 9, 12]
>
```

```elixir
s = Series.from_list(["a", "b", "b", "c", "c", "c"])
Series.distinct(s)
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  string[3]
  ["a", "b", "c"]
>
```

```elixir
Series.n_distinct(s)
```

<!-- livebook:{"output":true} -->

```
3
```

```elixir
Series.count(s)
```

<!-- livebook:{"output":true} -->

```
#Explorer.DataFrame<
  [rows: 3, columns: 2]
  values string ["c", "b", "a"]
  counts integer [3, 2, 1]
>
```

```elixir
DataFrame.from_columns(
  a: [1, 2, 3],
  b: ["a", "b", "c"]
)
```

<!-- livebook:{"output":true} -->

```
#Explorer.DataFrame<
  [rows: 3, columns: 2]
  a integer [1, 2, 3]
  b string ["a", "b", "c"]
>
```

```elixir
df
```

<!-- livebook:{"output":true} -->

```
#Explorer.DataFrame<
  [rows: 1094, columns: 10]
  year integer [2010, 2010, 2010, 2010, 2010, "..."]
  country string ["AFGHANISTAN", "ALBANIA", "ALGERIA", "ANDORRA", "ANGOLA", "..."]
  total integer [2308, 1254, 32500, 141, 7924, "..."]
  solid_fuel integer [627, 117, 332, 0, 0, "..."]
  liquid_fuel integer [1601, 953, 12381, 141, 3649, "..."]
  gas_fuel integer [74, 7, 14565, 0, 374, "..."]
  cement integer [5, 177, 2598, 0, 204, "..."]
  gas_flaring integer [0, 0, 2623, 0, 3697, "..."]
  per_capita float [0.08, 0.43, 0.9, 1.68, 0.37, "..."]
  bunker_fuels integer [9, 7, 663, 0, 321, "..."]
>
```

```elixir
name3 = DataFrame.names(df) |> Enum.to_list() |> Series.from_list()
name3
```

<!-- livebook:{"output":true} -->

```
#Explorer.Series<
  string[10]
  ["year", "country", "total", "solid_fuel", "liquid_fuel", "gas_fuel", "cement", "gas_flaring",
   "per_capita", "bunker_fuels"]
>
```

```elixir
{DataFrame.n_cols(df), DataFrame.n_rows(df)}
```

<!-- livebook:{"output":true} -->

```
{10, 1094}
```

```elixir
DataFrame.select(df, [name3[4], name3[5], "year", "country"])
```

<!-- livebook:{"output":true} -->

```
#Explorer.DataFrame<
  [rows: 1094, columns: 4]
  liquid_fuel integer [1601, 953, 12381, 141, 3649, "..."]
  gas_fuel integer [74, 7, 14565, 0, 374, "..."]
  year integer [2010, 2010, 2010, 2010, 2010, "..."]
  country string ["AFGHANISTAN", "ALBANIA", "ALGERIA", "ANDORRA", "ANGOLA", "..."]
>
```

```elixir
DataFrame.select(df, &String.ends_with?(&1, "fuel"))
```

<!-- livebook:{"output":true} -->

```
#Explorer.DataFrame<
  [rows: 1094, columns: 3]
  solid_fuel integer [627, 117, 332, 0, 0, "..."]
  liquid_fuel integer [1601, 953, 12381, 141, 3649, "..."]
  gas_fuel integer [74, 7, 14565, 0, 374, "..."]
>
```

```elixir
DataFrame.select(df, &String.ends_with?(&1, "fuel"), :drop)
```

<!-- livebook:{"output":true} -->

```
#Explorer.DataFrame<
  [rows: 1094, columns: 7]
  year integer [2010, 2010, 2010, 2010, 2010, "..."]
  country string ["AFGHANISTAN", "ALBANIA", "ALGERIA", "ANDORRA", "ANGOLA", "..."]
  total integer [2308, 1254, 32500, 141, 7924, "..."]
  cement integer [5, 177, 2598, 0, 204, "..."]
  gas_flaring integer [0, 0, 2623, 0, 3697, "..."]
  per_capita float [0.08, 0.43, 0.9, 1.68, 0.37, "..."]
  bunker_fuels integer [9, 7, 663, 0, 321, "..."]
>
```

```elixir
# is equal to:    df[column], filtered element
DataFrame.filter(df, &Series.equal(&1["country"], "AFGHANISTAN"))
```

<!-- livebook:{"output":true} -->

```
#Explorer.DataFrame<
  [rows: 5, columns: 10]
  year integer [2010, 2011, 2012, 2013, 2014]
  country string ["AFGHANISTAN", "AFGHANISTAN", "AFGHANISTAN", "AFGHANISTAN", "AFGHANISTAN"]
  total integer [2308, 3338, 2933, 2731, 2675]
  solid_fuel integer [627, 1174, 1000, 1075, 1194]
  liquid_fuel integer [1601, 2075, 1844, 1568, 1393]
  gas_fuel integer [74, 84, 84, 81, 74]
  cement integer [5, 5, 5, 7, 14]
  gas_flaring integer [0, 0, 0, 0, 0]
  per_capita float [0.08, 0.12, 0.1, 0.09, 0.08]
  bunker_fuels integer [9, 9, 9, 9, 9]
>
```

```elixir
filtered_df =
  df
  |> DataFrame.filter(&Series.equal(&1["country"], "ALGERIA"))
  |> DataFrame.filter(&Series.greater(&1["year"], 2012))
```

<!-- livebook:{"output":true} -->

```
#Explorer.DataFrame<
  [rows: 2, columns: 10]
  year integer [2013, 2014]
  country string ["ALGERIA", "ALGERIA"]
  total integer [36669, 39651]
  solid_fuel integer [198, 149]
  liquid_fuel integer [14170, 14422]
  gas_fuel integer [17863, 20151]
  cement integer [2516, 2856]
  gas_flaring integer [1922, 2073]
  per_capita float [0.96, 1.02]
  bunker_fuels integer [687, 581]
>
```

```elixir
DataFrame.mutate(df,
  new_column: &Series.add(&1["solid_fuel"], &1["cement"])
)
```

<!-- livebook:{"output":true} -->

```
#Explorer.DataFrame<
  [rows: 1094, columns: 11]
  year integer [2010, 2010, 2010, 2010, 2010, "..."]
  country string ["AFGHANISTAN", "ALBANIA", "ALGERIA", "ANDORRA", "ANGOLA", "..."]
  total integer [2308, 1254, 32500, 141, 7924, "..."]
  solid_fuel integer [627, 117, 332, 0, 0, "..."]
  liquid_fuel integer [1601, 953, 12381, 141, 3649, "..."]
  gas_fuel integer [74, 7, 14565, 0, 374, "..."]
  cement integer [5, 177, 2598, 0, 204, "..."]
  gas_flaring integer [0, 0, 2623, 0, 3697, "..."]
  per_capita float [0.08, 0.43, 0.9, 1.68, 0.37, "..."]
  bunker_fuels integer [9, 7, 663, 0, 321, "..."]
  new_column integer [632, 294, 2930, 0, 204, "..."]
>
```
